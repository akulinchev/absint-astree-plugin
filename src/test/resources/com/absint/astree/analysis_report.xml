<?xml version="1.0" encoding="UTF-8"?>
<a3c xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.absint.com/dtd/a3-c-report-19.10.xsd" xmlns="http://www.absint.com/a3creport">
    <versions>
        <client_version version="19.10" build="5581312" tag="auto/2019/10/18/2000"/>
        <server_version version="19.10" build="5581312" tag="auto/2019/10/18/2000"/>
        <analyzer_version version="19.10" build="5581312" tag="auto/2019/10/18/2000"/>
    </versions>
    <server hostname="10.7.21.222" port="36000" working_directory="C:/Astree_Data/4211/4/"/>
    <project name="Test" description="test" id="4211" revision="4"/>
    <batch_command_line>-b -s server:36000 --id 4211 --import Test.dax --report-file analysis_report.txt --xml-report-file analysis_report.xml --preprocess-report-file preprocess_report.txt</batch_command_line>
    <analysis type="Astree">
        <analysis_start>2020/03/13 at 18:18:08</analysis_start>
        <analysis_end>2020/03/13 at 18:18:11</analysis_end>
        <summary errors="2" runtime_errors="3" flow_anomalies="3" data_races="0" rule_violations="3531" reached_code="0%" reached_code_plain_value="0" duration="3" exit_code="success"/>
        <abi>
            <abi_option name="default"> Analyzer default</abi_option>
            <abi_option name="bitfield_sign">unsigned</abi_option>
            <abi_option name="endianness">little</abi_option>
            <abi_option name="unaligned_dereference">valid</abi_option>
        </abi>
        <options>
            <option name="analysis-entry">Reset_Handler</option>
            <option name="list-entry-functions">1</option>
            <option name="warn-on-explicit-integer-cast-ranges">yes</option>
            <option name="warn-on-integer-lshift-ranges">yes</option>
        </options>
        <rulechecks>
            <configuration name="Configuration">
                <files>
                    <all_files/>
                </files>
                <rules>
                    <rule name="M2012.D.4.10" partial="0">
                        <check name="multiple-include"/>
                    </rule>
                    <rule name="M2012.D.4.9" partial="0">
                        <check name="macro-function-like"/>
                    </rule>
                    <rule name="M2012.21.12" partial="0">
                        <check name="stdlib-use-fenv"/>
                    </rule>
                    <rule name="M2012.21.11" partial="0">
                        <check name="include-tgmath"/>
                    </rule>
                    <rule name="M2012.21.10" partial="0">
                        <check name="include-time"/>
                        <check name="wcsftime"/>
                    </rule>
                    <rule name="M2012.21.9" partial="0">
                        <check name="stdlib-macro-compar"/>
                        <check name="stdlib-use-compar"/>
                    </rule>
                    <rule name="M2012.21.8" partial="0">
                        <check name="stdlib-macro"/>
                        <check name="stdlib-macro-getenv"/>
                        <check name="stdlib-use"/>
                        <check name="stdlib-use-getenv"/>
                        <check name="stdlib-use-system"/>
                    </rule>
                    <rule name="M2012.21.7" partial="0">
                        <check name="stdlib-macro-ato"/>
                        <check name="stdlib-macro-atoll"/>
                        <check name="stdlib-use-ato"/>
                        <check name="stdlib-use-atoll"/>
                    </rule>
                    <rule name="M2012.21.6" partial="0">
                        <check name="include-stdio"/>
                        <check name="stdlib-macro-stdio"/>
                        <check name="stdlib-macro-wchar"/>
                        <check name="stdlib-use-wchar"/>
                    </rule>
                    <rule name="M2012.21.5" partial="0">
                        <check name="include-signal"/>
                    </rule>
                    <rule name="M2012.21.4" partial="0">
                        <check name="include-setjmp"/>
                    </rule>
                    <rule name="M2012.21.3" partial="0">
                        <check name="stdlib-macro-alloc"/>
                        <check name="stdlib-use-alloc"/>
                    </rule>
                    <rule name="M2012.21.2" partial="0">
                        <check name="reserved-declaration"/>
                        <check name="reserved-declaration-c99"/>
                    </rule>
                    <rule name="M2012.21.1" partial="0">
                        <check name="language-override"/>
                        <check name="language-override-c99"/>
                        <check name="language-undefine"/>
                        <check name="language-undefine-c99"/>
                        <check name="reserved-identifier"/>
                    </rule>
                    <rule name="M2012.20.14" partial="0">
                        <check name="dangling-elsegroup"/>
                        <check name="unclosed-ifgroup"/>
                    </rule>
                    <rule name="M2012.20.13" partial="0">
                        <check name="directive-syntax"/>
                        <check name="extra-tokens"/>
                        <check name="non-directive"/>
                    </rule>
                    <rule name="M2012.20.12" partial="0">
                        <check name="expanded-hash-parameter"/>
                    </rule>
                    <rule name="M2012.20.11" partial="0">
                        <check name="hash-macro-order"/>
                    </rule>
                    <rule name="M2012.20.10" partial="0">
                        <check name="hash-macro"/>
                    </rule>
                    <rule name="M2012.20.9" partial="0">
                        <check name="macro-undefined"/>
                    </rule>
                    <rule name="M2012.20.8" partial="0">
                        <check name="if-value"/>
                    </rule>
                    <rule name="M2012.20.7" partial="0">
                        <check name="macro-parameter-unparenthesized-expression"/>
                        <check name="macro-parameter-unparenthesized-expression-strict"/>
                    </rule>
                    <rule name="M2012.20.6" partial="0">
                        <check name="macro-argument-hash"/>
                    </rule>
                    <rule name="M2012.20.5" partial="0">
                        <check name="undef"/>
                    </rule>
                    <rule name="M2012.20.4" partial="0">
                        <check name="keyword-override"/>
                    </rule>
                    <rule name="M2012.20.3" partial="0">
                        <check name="include-syntax"/>
                    </rule>
                    <rule name="M2012.20.2" partial="0">
                        <check name="include-characters"/>
                        <check name="include-characters-backslash"/>
                        <check name="include-characters-sline"/>
                    </rule>
                    <rule name="M2012.20.1" partial="0">
                        <check name="include-position"/>
                    </rule>
                    <rule name="M2012.19.2" partial="0">
                        <check name="union"/>
                        <check name="union-object"/>
                    </rule>
                    <rule name="M2012.19.1" partial="1">
                        <check name="assignment-overlapping"/>
                        <check name="memcpy-overlapping"/>
                        <check name="union-assignment"/>
                    </rule>
                    <rule name="M2012.18.8" partial="0">
                        <check name="variable-array-length"/>
                    </rule>
                    <rule name="M2012.18.7" partial="0">
                        <check name="flexible-array-member"/>
                    </rule>
                    <rule name="M2012.18.6" partial="0">
                        <check name="pointered-deallocation"/>
                        <check name="return-reference-local"/>
                    </rule>
                    <rule name="M2012.18.5" partial="0">
                        <check name="pointer-depth"/>
                    </rule>
                    <rule name="M2012.18.4" partial="0">
                        <check name="pointer-counting"/>
                    </rule>
                    <rule name="M2012.17.7" partial="0">
                        <check name="function-return-unused"/>
                    </rule>
                    <rule name="M2012.17.6" partial="0">
                        <check name="array-parameter-static-size"/>
                    </rule>
                    <rule name="M2012.17.4" partial="0">
                        <check name="return-empty"/>
                        <check name="return-implicit"/>
                    </rule>
                    <rule name="M2012.17.3" partial="0">
                        <check name="implicit-function-declaration"/>
                    </rule>
                    <rule name="M2012.17.2" partial="0">
                        <check name="recursion"/>
                    </rule>
                    <rule name="M2012.17.1" partial="0">
                        <check name="include-stdarg"/>
                    </rule>
                    <rule name="M2012.16.7" partial="0">
                        <check name="essentially-boolean-switch"/>
                    </rule>
                    <rule name="M2012.16.6" partial="0">
                        <check name="switch-clause-count"/>
                    </rule>
                    <rule name="M2012.16.5" partial="0">
                        <check name="switch-default-position"/>
                    </rule>
                    <rule name="M2012.16.4" partial="1">
                        <check name="switch-default"/>
                    </rule>
                    <rule name="M2012.16.3" partial="0">
                        <check name="switch-clause-break"/>
                        <check name="switch-clause-break-continue"/>
                        <check name="switch-clause-break-return"/>
                    </rule>
                    <rule name="M2012.16.2" partial="0">
                        <check name="switch-label"/>
                    </rule>
                    <rule name="M2012.16.1" partial="0">
                        <check name="compound-switch"/>
                        <check name="switch-clause-break"/>
                        <check name="switch-clause-break-continue"/>
                        <check name="switch-clause-break-return"/>
                        <check name="switch-clause-count"/>
                        <check name="switch-clause-empty-compound"/>
                        <check name="switch-clause-syntax"/>
                        <check name="switch-default-position"/>
                        <check name="switch-label"/>
                        <check name="switch-multiple-default"/>
                        <check name="switch-skipped-code"/>
                    </rule>
                    <rule name="M2012.15.7" partial="0">
                        <check name="missing-else"/>
                    </rule>
                    <rule name="M2012.15.6" partial="0">
                        <check name="compound-ifelse"/>
                        <check name="compound-loop"/>
                        <check name="compound-switch"/>
                    </rule>
                    <rule name="M2012.15.5" partial="0">
                        <check name="return-position"/>
                    </rule>
                    <rule name="M2012.15.4" partial="0">
                        <check name="loop-termination"/>
                    </rule>
                    <rule name="M2012.15.3" partial="0">
                        <check name="goto-nesting"/>
                    </rule>
                    <rule name="M2012.15.2" partial="0">
                        <check name="backjump"/>
                    </rule>
                    <rule name="M2012.15.1" partial="0">
                        <check name="goto"/>
                    </rule>
                    <rule name="M2012.14.4" partial="0">
                        <check name="boolean-control"/>
                    </rule>
                    <rule name="M2012.13.6" partial="0">
                        <check name="sizeof"/>
                    </rule>
                    <rule name="M2012.13.5" partial="1">
                        <check name="side-effect-in-logical-exp"/>
                    </rule>
                    <rule name="M2012.13.4" partial="0" option="no">
                        <check name="assignment"/>
                    </rule>
                    <rule name="M2012.13.3" partial="0">
                        <check name="unary-assign-detachment"/>
                    </rule>
                    <rule name="M2012.13.2" partial="1">
                        <check name="evaluation-order"/>
                        <check name="multiple-volatile-accesses"/>
                        <check name="multiple-writes-in-full-expr"/>
                    </rule>
                    <rule name="M2012.13.1" partial="1">
                        <check name="side-effect-in-initializer-list"/>
                    </rule>
                    <rule name="M2012.12.4" partial="0">
                        <check name="constant-expression-wrap-around"/>
                        <check name="preprocessor-wrap-around"/>
                    </rule>
                    <rule name="M2012.12.3" partial="0">
                        <check name="comma-operator"/>
                    </rule>
                    <rule name="M2012.12.2" partial="0">
                        <check name="essential-shift-width"/>
                        <check name="essential-shift-width-constant"/>
                    </rule>
                    <rule name="M2012.12.1" partial="0">
                        <check name="precedence"/>
                        <check name="sizeof-parenthesized"/>
                    </rule>
                    <rule name="M2012.11.9" partial="0">
                        <check name="null-pointer-constant"/>
                    </rule>
                    <rule name="M2012.11.8" partial="0">
                        <check name="pointer-qualifier-cast-const"/>
                        <check name="pointer-qualifier-cast-const-implicit"/>
                        <check name="pointer-qualifier-cast-volatile"/>
                        <check name="pointer-qualifier-cast-volatile-implicit"/>
                    </rule>
                    <rule name="M2012.11.7" partial="0">
                        <check name="inappropriate-pointer-cast"/>
                        <check name="inappropriate-pointer-cast-implicit"/>
                    </rule>
                    <rule name="M2012.11.6" partial="0">
                        <check name="cast-pointer-void-arithmetic"/>
                        <check name="cast-pointer-void-arithmetic-implicit"/>
                    </rule>
                    <rule name="M2012.11.5" partial="0">
                        <check name="cast-pointer-void"/>
                    </rule>
                    <rule name="M2012.11.4" partial="0">
                        <check name="pointer-integral-cast"/>
                        <check name="pointer-integral-cast-implicit"/>
                    </rule>
                    <rule name="M2012.11.3" partial="0">
                        <check name="object-pointer-diff-cast"/>
                        <check name="object-pointer-diff-cast-implicit"/>
                    </rule>
                    <rule name="M2012.11.2" partial="0">
                        <check name="cast-pointer-incomplete"/>
                    </rule>
                    <rule name="M2012.11.1" partial="0">
                        <check name="function-pointer-cast"/>
                        <check name="function-pointer-integer-cast"/>
                        <check name="function-pointer-integer-cast-implicit"/>
                        <check name="incompatible-function-pointer-conversion"/>
                    </rule>
                    <rule name="M2012.10.8" partial="0">
                        <check name="composite-cast"/>
                        <check name="composite-cast-width"/>
                    </rule>
                    <rule name="M2012.10.7" partial="0">
                        <check name="composite-type-width"/>
                    </rule>
                    <rule name="M2012.10.6" partial="0">
                        <check name="composite-assign"/>
                    </rule>
                    <rule name="M2012.10.5" partial="0">
                        <check name="inappropriate-cast"/>
                    </rule>
                    <rule name="M2012.10.4" partial="0">
                        <check name="essential-arithmetic-conversion"/>
                    </rule>
                    <rule name="M2012.10.3" partial="0">
                        <check name="essential-type-assign"/>
                    </rule>
                    <rule name="M2012.10.2" partial="0">
                        <check name="inappropriate-char-usage"/>
                    </rule>
                    <rule name="M2012.10.1" partial="0">
                        <check name="inappropriate-bool"/>
                        <check name="inappropriate-char"/>
                        <check name="inappropriate-enum"/>
                        <check name="inappropriate-int"/>
                    </rule>
                    <rule name="M2012.9.5" partial="0">
                        <check name="array-size-designator"/>
                    </rule>
                    <rule name="M2012.9.4" partial="0">
                        <check name="initializer-multiple"/>
                    </rule>
                    <rule name="M2012.9.3" partial="0">
                        <check name="array-initialization"/>
                    </rule>
                    <rule name="M2012.9.2" partial="0">
                        <check name="implicit-designation"/>
                    </rule>
                    <rule name="M2012.9.1" partial="0">
                        <check name="uninitialized-local-read"/>
                        <check name="uninitialized-variable-use"/>
                    </rule>
                    <rule name="M2012.8.14" partial="0">
                        <check name="restrict"/>
                    </rule>
                    <rule name="M2012.8.12" partial="0">
                        <check name="enum-implicit-value"/>
                    </rule>
                    <rule name="M2012.8.11" partial="0">
                        <check name="array-size-global"/>
                    </rule>
                    <rule name="M2012.8.10" partial="0">
                        <check name="inline-static"/>
                    </rule>
                    <rule name="M2012.8.9" partial="0">
                        <check name="local-object-scope"/>
                    </rule>
                    <rule name="M2012.8.8" partial="0">
                        <check name="static-function-declaration"/>
                        <check name="static-object-declaration"/>
                    </rule>
                    <rule name="M2012.8.7" partial="0">
                        <check name="global-object-scope"/>
                    </rule>
                    <rule name="M2012.8.6" partial="0">
                        <check name="definition-duplicate"/>
                        <check name="undefined-extern"/>
                    </rule>
                    <rule name="M2012.8.5" partial="0">
                        <check name="external-file-spreading"/>
                        <check name="external-redeclaration"/>
                    </rule>
                    <rule name="M2012.8.4" partial="0">
                        <check name="extern-function-declaration"/>
                        <check name="extern-object-declaration"/>
                    </rule>
                    <rule name="M2012.8.3" partial="0">
                        <check name="function-type-mismatch"/>
                        <check name="object-type-mismatch"/>
                        <check name="parameter-name-match"/>
                    </rule>
                    <rule name="M2012.8.2" partial="0">
                        <check name="function-prototype"/>
                        <check name="parameter-name"/>
                    </rule>
                    <rule name="M2012.8.1" partial="0">
                        <check name="function-return-type"/>
                        <check name="type-specifier"/>
                        <check name="undeclared-parameter"/>
                    </rule>
                    <rule name="M2012.7.4" partial="0">
                        <check name="literal-assignment"/>
                        <check name="literal-assignment-type"/>
                        <check name="string-literal-modification"/>
                    </rule>
                    <rule name="M2012.7.3" partial="0">
                        <check name="long-suffix"/>
                    </rule>
                    <rule name="M2012.7.2" partial="0">
                        <check name="integer-suffix"/>
                    </rule>
                    <rule name="M2012.7.1" partial="0">
                        <check name="octal-constant"/>
                    </rule>
                    <rule name="M2012.6.2" partial="0">
                        <check name="bitfield-signed-size"/>
                    </rule>
                    <rule name="M2012.6.1" partial="0" option="int">
                        <check name="bitfield-typing"/>
                    </rule>
                    <rule name="M2012.5.9" partial="0">
                        <check name="static-identifier-reuse"/>
                    </rule>
                    <rule name="M2012.5.8" partial="0">
                        <check name="identifier-unique-extern"/>
                    </rule>
                    <rule name="M2012.5.7" partial="0">
                        <check name="identifier-unique-tag"/>
                    </rule>
                    <rule name="M2012.5.6" partial="0">
                        <check name="identifier-unique-typedef"/>
                    </rule>
                    <rule name="M2012.5.5" partial="0">
                        <check name="distinct-identifiers-macros"/>
                    </rule>
                    <rule name="M2012.5.4" partial="0">
                        <check name="distinct-macro"/>
                        <check name="distinct-macro-parameter"/>
                    </rule>
                    <rule name="M2012.5.3" partial="0">
                        <check name="distinct-identifier-hidden"/>
                    </rule>
                    <rule name="M2012.5.2" partial="0">
                        <check name="distinct-label"/>
                        <check name="distinct-member"/>
                        <check name="distinct-ordinary"/>
                        <check name="distinct-tags"/>
                    </rule>
                    <rule name="M2012.5.1" partial="0">
                        <check name="distinct-extern"/>
                    </rule>
                    <rule name="M2012.4.2" partial="0">
                        <check name="trigraph"/>
                    </rule>
                    <rule name="M2012.4.1" partial="0">
                        <check name="escape-termination"/>
                    </rule>
                    <rule name="M2012.3.2" partial="0">
                        <check name="sline-splicing"/>
                    </rule>
                    <rule name="M2012.3.1" partial="0">
                        <check name="mmline-comment"/>
                        <check name="sline-comment"/>
                        <check name="smline-comment"/>
                    </rule>
                    <rule name="M2012.2.7" partial="0">
                        <check name="unused-parameter"/>
                    </rule>
                    <rule name="M2012.2.6" partial="0">
                        <check name="unused-label"/>
                    </rule>
                    <rule name="M2012.2.5" partial="0">
                        <check name="unused-macro"/>
                    </rule>
                    <rule name="M2012.2.4" partial="0">
                        <check name="unused-tag"/>
                    </rule>
                    <rule name="M2012.2.3" partial="0">
                        <check name="unused-typedef"/>
                    </rule>
                    <rule name="M2012.1.3" partial="1">
                        <check name="evaluation-order"/>
                        <check name="evaluation-order-initializer"/>
                        <check name="multiple-volatile-accesses"/>
                        <check name="sizeof"/>
                    </rule>
                    <rule name="A.5.4" partial="0">
                        <check name="annotation-insertion-failed"/>
                        <check name="conflicting-absolute-addresses"/>
                        <check name="missing-rulechecking-phases"/>
                    </rule>
                    <rule name="A.5.3" partial="0">
                        <check name="unsupported-language-feature-fatal"/>
                    </rule>
                    <rule name="A.5.2" partial="0" option="asm\|end_asm\|once\|push_macro\|pop_macro">
                        <check name="pragma-usage"/>
                        <check name="unsupported-language-feature"/>
                    </rule>
                    <rule name="A.5.1" partial="0">
                        <check name="excessive-interval"/>
                        <check name="invalid-directive"/>
                    </rule>
                    <rule name="A.4.2" partial="0">
                        <check name="evaluation-order-initializer"/>
                    </rule>
                    <rule name="A.4.1" partial="0">
                        <check name="evaluation-order"/>
                    </rule>
                    <rule name="A.3.3" partial="0" option="int">
                        <check name="bitfield-typing"/>
                    </rule>
                    <rule name="A.3.2" partial="0">
                        <check name="multi-character-constant"/>
                    </rule>
                    <rule name="A.3.1" partial="0">
                        <check name="function-pointer-integer-cast"/>
                        <check name="pointer-integral-cast"/>
                    </rule>
                    <rule name="A.2.21" partial="0">
                        <check name="packed-specifier"/>
                    </rule>
                    <rule name="A.2.20" partial="0">
                        <check name="builtin-constant-p"/>
                        <check name="builtin-sel"/>
                    </rule>
                    <rule name="A.2.19" partial="0">
                        <check name="enumerator-value"/>
                    </rule>
                    <rule name="A.2.18" partial="0">
                        <check name="pointer-arithmetic-void"/>
                    </rule>
                    <rule name="A.2.17" partial="0">
                        <check name="empty-struct"/>
                    </rule>
                    <rule name="A.2.16" partial="0">
                        <check name="attribute"/>
                    </rule>
                    <rule name="A.2.15" partial="0">
                        <check name="has-include"/>
                        <check name="has-include-next"/>
                    </rule>
                    <rule name="A.2.14" partial="0">
                        <check name="include-next"/>
                    </rule>
                    <rule name="A.2.13" partial="0">
                        <check name="alignof-void"/>
                        <check name="sizeof-void"/>
                    </rule>
                    <rule name="A.2.12" partial="0">
                        <check name="non-standard-identifier"/>
                    </rule>
                    <rule name="A.2.11" partial="0">
                        <check name="non-standard-escape-sequence"/>
                    </rule>
                    <rule name="A.2.10" partial="0">
                        <check name="binary-constant"/>
                    </rule>
                    <rule name="A.2.9" partial="0">
                        <check name="statement-expression"/>
                    </rule>
                    <rule name="A.2.8" partial="0">
                        <check name="pointer-attribute"/>
                    </rule>
                    <rule name="A.2.7" partial="0">
                        <check name="non-standard-keyword"/>
                    </rule>
                    <rule name="A.2.6" partial="0">
                        <check name="lvalue-cast"/>
                    </rule>
                    <rule name="A.2.5" partial="0">
                        <check name="forward-declared-enum"/>
                    </rule>
                    <rule name="A.2.4" partial="0">
                        <check name="constant-expression-extended"/>
                    </rule>
                    <rule name="A.2.3" partial="0">
                        <check name="at-location"/>
                    </rule>
                    <rule name="A.2.2" partial="0">
                        <check name="assembler"/>
                    </rule>
                    <rule name="A.2.1" partial="0">
                        <check name="implicit-function-declaration"/>
                    </rule>
                    <rule name="A.1.13" partial="0">
                        <check name="alignas-extended"/>
                    </rule>
                    <rule name="A.1.12" partial="0">
                        <check name="return-empty"/>
                        <check name="return-non-empty"/>
                    </rule>
                    <rule name="A.1.11" partial="0">
                        <check name="incompatible-function-pointer-conversion"/>
                        <check name="incompatible-object-pointer-conversion"/>
                    </rule>
                    <rule name="A.1.10" partial="0">
                        <check name="undeclared-parameter"/>
                    </rule>
                    <rule name="A.1.9" partial="0">
                        <check name="redeclaration"/>
                    </rule>
                    <rule name="A.1.8" partial="0">
                        <check name="initializer-excess"/>
                    </rule>
                    <rule name="A.1.7" partial="0">
                        <check name="assignment-to-non-modifiable-lvalue"/>
                    </rule>
                    <rule name="A.1.6" partial="0">
                        <check name="non-constant-static-assert"/>
                        <check name="static-assert"/>
                    </rule>
                    <rule name="A.1.5" partial="0">
                        <check name="parameter-match-type"/>
                    </rule>
                    <rule name="A.1.4" partial="0">
                        <check name="function-pointer-integer-cast-implicit"/>
                        <check name="pointer-integral-cast-implicit"/>
                    </rule>
                    <rule name="A.1.3" partial="0">
                        <check name="function-return-type"/>
                        <check name="type-specifier"/>
                    </rule>
                    <rule name="A.1.2" partial="0">
                        <check name="invalid-array-size"/>
                    </rule>
                    <rule name="A.1.1" partial="0">
                        <check name="type-compatibility"/>
                        <check name="type-compatibility-link"/>
                    </rule>
                </rules>
            </configuration>
        </rulechecks>
        <analysis_directives/>
        <messages>
            <alarm_message location_id="l1" type="a22682" duplicate="0">
                <textline location_id="l1">ALARM (R): check reserved-identifier failed (violates M2012.21.1-required)</textline>
            </alarm_message>
            <alarm_message location_id="l2548" type="a22845" duplicate="0">
                <textline location_id="l2548">[ the essential operand types are unsigned char and signed char</textline>
                <textline location_id="l2548">ALARM (R): check essential-arithmetic-conversion failed (violates M2012.10.4-required)</textline>
            </alarm_message>
            <note_message location_id="l1" type="a21536" duplicate="0">
                <textline location_id="l1">NOTE: Suspicious here!</textline>
            </note_message>
            <error_message context="l3532#call#Reset_Handler,l3533#call#STARTUP_initDataBSS,l3534#loop=1/1" location_id="l3537" type="a21541" duplicate="0">
                <textline location_id="l3537">ERROR: Definite runtime error during assignment in this context. Analysis stopped for this context.</textline>
            </error_message>
        </messages>
        <code-snippets>
            <code-snippet location_id="l1">
                <line>#define _SW_TYPES_H_</line>
                <line>        ~~~~~~~~~~~~~~~~~</line>
            </code-snippet>
            <code-snippet location_id="l2548">
                <line>for ((i = 0); (i &lt; (2)); (i++))</line>
                <line>              ~~~~~~~~~</line>
            </code-snippet>
        </code-snippets>
        <files>
            <file preprocessed="1" name="C:/dir/File1.i" id="p239"/>
            <file preprocessed="1" name="dir/File2.i" id="p258"/>
            <file preprocessed="0" name="../File1.c" id="o78"/>
            <file preprocessed="0" name="File3.h" id="o15"/>
            <file preprocessed="0" name="File2.c" id="o140"/>
        </files>
        <locations>
            <location id="l2548" p_file="p239" p_start_line="1841" p_start_col="18" p_end_line="1841" p_end_col="27" o_file="o78" o_start_line="1003" o_end_line="1003"/>
            <location id="l1" p_file="o15" p_start_line="51" p_start_col="8" p_end_line="51" p_end_col="25"/>
            <location id="l3537" p_file="p258" p_start_line="974" p_start_col="8" p_end_line="974" p_end_col="24" o_file="o140" o_start_line="97" o_end_line="97"/>
        </locations>
    </analysis>
    <alarm_categories>
        <alarm_category id="c1">Failed coding rule checks</alarm_category>
        <alarm_category id="c2">Invalid usage of pointers and arrays</alarm_category>
        <alarm_category id="c9">Data and control flow alarms</alarm_category>
        <alarm_category id="c11">Errors</alarm_category>
    </alarm_categories>
    <alarm_types>
        <alarm_type id="a23041" category_id="c1" class="R">Non standard keyword</alarm_type>
        <alarm_type id="a22635" category_id="c1" class="R">Macro function like</alarm_type>
        <alarm_type id="a23043" category_id="c1" class="R">Null pointer constant</alarm_type>
        <alarm_type id="a22845" category_id="c1" class="R">Essential arithmetic conversion</alarm_type>
        <alarm_type id="a23068" category_id="c1" class="R">Pointer counting</alarm_type>
        <alarm_type id="a22846" category_id="c1" class="R">Essential shift width constant</alarm_type>
        <alarm_type id="a22781" category_id="c1" class="R">Boolean control</alarm_type>
        <alarm_type id="a23070" category_id="c1" class="R">Pointer integral cast</alarm_type>
        <alarm_type id="a22966" category_id="c1" class="R">Local object scope</alarm_type>
        <alarm_type id="a22627" category_id="c1" class="R">Long suffix</alarm_type>
        <alarm_type id="a23187" category_id="c1" class="R">Unused typedef</alarm_type>
        <alarm_type id="a22652" category_id="c1" class="R">Non directive</alarm_type>
        <alarm_type id="a23186" category_id="c1" class="R">Unused tag</alarm_type>
        <alarm_type id="a22924" category_id="c1" class="R">Inappropriate int</alarm_type>
        <alarm_type id="a22772" category_id="c1" class="R">Attribute</alarm_type>
        <alarm_type id="a22715" category_id="c1" class="R">Undefined extern</alarm_type>
        <alarm_type id="a22898" category_id="c1" class="R">Global object scope</alarm_type>
        <alarm_type id="a22774" category_id="c1" class="R">Binary constant</alarm_type>
        <alarm_type id="a23149" category_id="c1" class="R">Switch clause empty compound</alarm_type>
        <alarm_type id="a22799" category_id="c1" class="R">Composite cast</alarm_type>
        <alarm_type id="a22919" category_id="c1" class="R">Inappropriate bool</alarm_type>
        <alarm_type id="a23087" category_id="c1" class="R">Reserved declaration</alarm_type>
        <alarm_type id="a23086" category_id="c1" class="R">Reserved declaration c99</alarm_type>
        <alarm_type id="a22577" category_id="c1" class="R">External file spreading</alarm_type>
        <alarm_type id="a22848" category_id="c1" class="R">Essential type assign</alarm_type>
        <alarm_type id="a22725" category_id="c1" class="R">Union</alarm_type>
        <alarm_type id="a22851" category_id="c1" class="R">Evaluation order</alarm_type>
        <alarm_type id="a22808" category_id="c1" class="R">Constant expression wrap around</alarm_type>
        <alarm_type id="a22534" category_id="c1" class="R">Assignment</alarm_type>
        <alarm_type id="a22684" category_id="c1" class="R">Return position</alarm_type>
        <alarm_type id="a22682" category_id="c1" class="R">Reserved identifier</alarm_type>
        <alarm_type id="a22957" category_id="c1" class="R">Language override</alarm_type>
        <alarm_type id="a22800" category_id="c1" class="R">Composite type width</alarm_type>
        <alarm_type id="a22676" category_id="c1" class="R">Pointer qualifier cast volatile</alarm_type>
        <alarm_type id="a22619" category_id="c1" class="R">Integer suffix</alarm_type>
        <alarm_type id="a22736" category_id="c1" class="R">Unused parameter</alarm_type>
        <alarm_type id="a22675" category_id="c1" class="R">Pointer qualifier cast const</alarm_type>
        <alarm_type id="a22764" category_id="c1" class="R">Array size global</alarm_type>
        <alarm_type id="a22766" category_id="c1" class="R">Assembler</alarm_type>
        <alarm_type id="a23260" category_id="c1" class="R">Composite cast width</alarm_type>
        <alarm_type id="a22883" category_id="c1" class="R">Function pointer integer cast</alarm_type>
        <alarm_type id="a21567" category_id="c2" class="A">Dereference of null or invalid pointer</alarm_type>
        <alarm_type id="a21558" category_id="c2" class="C">Invalid pointer comparison</alarm_type>
        <alarm_type id="a21568" category_id="c2" class="A">Possible overflow upon dereference</alarm_type>
        <alarm_type id="a21551" category_id="c9" class="D">Control flow anomaly</alarm_type>
        <alarm_type id="a21541" category_id="c11" class="E">Definite runtime error</alarm_type>
        <alarm_type id="a21536" category_id="c11" class="E">Other</alarm_type>
    </alarm_types>
</a3c>
